apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pihole
  name: pihole
  namespace: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      hostname: pihole
      volumes:
        - name: config
          hostPath:
            path: /mnt/data/pihole/settings
            type: DirectoryOrCreate
        - name: dnsmasq
          hostPath:
            path: /mnt/data/pihole/dnsmasq
            type: DirectoryOrCreate
        - name: conf-unbound
          hostPath:
            path: /mnt/data/pihole/unbound/unbound.conf
            type: FileOrCreate
      containers:
        - name: pihole
          image: pihole/pihole:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: pihole-generic-configmap
            - secretRef:
                name: pihole-generic-secrets
          ports:
            - containerPort: 53
            - containerPort: 67
            - containerPort: 80
          volumeMounts:
            - name: config
              mountPath: /etc/pihole
            - name: dnsmasq
              mountPath: /etc/dnsmasq.d
          livenessProbe:
            httpGet:
              path: /admin
              port: 80
          readinessProbe:
            httpGet:
              path: /admin
              port: 80
          resources: {}
        - name: unbound
          image: klutchell/unbound:latest
          imagePullPolicy: Always
          securityContext:
            privileged: true
          ports:
            - containerPort: 5335
          volumeMounts:
            - name: conf-unbound
              mountPath: /etc/unbound/unbound.conf
          resources: {}
